@use "sass:math";
@use "utils" as u;

/***
* Inspired by Pedro RodrÃ­guez CSS-Tricks article
* Article: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/
* Twitter: https://twitter.com/pprg1996
* Caveats:
* - Root font-size is assumed to be 16px
***/
@function vw-calc(
  $values,
  $width: 1440,
  $mobile-width: 375,
  $clamp: false,
  $mobile: false
) {
  $base-width: u.strip-unit($width);
  $count: length($values);
  $min-value: 0;
  $max-value: 0;
  $limitValueSize: 0;

  $pixelsPerRem: 16;
  $minWidthPx: u.strip-unit($mobile-width);
  $maxWidthPx: u.strip-unit($width);
  $minValueSize: u.strip-unit(u.rem-calc(nth($values, 1)));
  $maxValueSize: u.strip-unit(u.rem-calc(nth($values, 1)));
  $limitValueSize: u.strip-unit(u.rem-calc(nth($values, 1)));

  @if $mobile {
    $maxWidthPx: u.strip-unit($mobile-width);
    $minWidthPx: 0;
  }

  @if $count == 1 {
    @error "Minimum two (2) values required. e.g.: vw-calc(16 32)";
  }

  @if $count == 2 {
    $minValueSize: u.strip-unit(u.rem-calc(nth($values, 1)));
    $maxValueSize: u.strip-unit(u.rem-calc(nth($values, 2)));

    @if nth($values, 1) > nth($values, 2) {
      @error "(#{nth($values, 1)} < #{nth($values, 2)} = false) - {{max-value}} can't be lower than {{min-value}}.";
    }

    @if nth($values, 1) == nth($values, 2) {
      @error "#{nth($values, 1)} === #{nth($values, 2)} - {{min-value}} cannot be the same than {{max-value}}";
    }
  }

  @if $count == 3 {
    $clamp: true;
    $minValueSize: u.strip-unit(u.rem-calc(nth($values, 1)));
    $maxValueSize: u.strip-unit(u.rem-calc(nth($values, 2)));
    $limitValueSize: u.strip-unit(u.rem-calc(nth($values, 3)));

    @if nth($values, 1) > nth($values, 2) {
      @error "(#{nth($values, 1)} < #{nth($values, 2)} = false) - {{max-value}} can't be lower than {{min-value}}.";
    }

    @if nth($values, 2) > nth($values, 3) {
      @error "(#{nth($values, 2)} < #{nth($values, 3)} = false) - {{limit-value}} can't be lower than {{max-value}}.";
    }

    @if nth($values, 1) == nth($values, 2) {
      @error "#{nth($values, 1)} === #{nth($values, 2)} - {{min-value}} cannot be the same than {{max-value}}";
    }
  }

  $minWidth: math.div($minWidthPx, $pixelsPerRem);
  $maxWidth: math.div($maxWidthPx, $pixelsPerRem);

  $slope: math.div(($maxValueSize - $minValueSize), ($maxWidth - $minWidth));
  $yAxisIntersection: -$minWidth * $slope + $minValueSize;

  @if $count == 3 {
    @return clamp(
      #{$minValueSize}rem,
      #{$yAxisIntersection}rem + #{$slope * 100}vw,
      #{$limitValueSize}rem
    );
  } @else {
    @if $clamp {
      @return clamp(
        #{$minValueSize}rem,
        #{$yAxisIntersection}rem + #{$slope * 100}vw,
        #{$maxValueSize}rem
      );
    } @else {
      @return max(
        #{$minValueSize}rem,
        #{$yAxisIntersection}rem + #{$slope * 100}vw
      );
    }
  }

  @if $count > 3 {
    @error "(#{$values}) - More than 3 (three) values is not allowed.";
  }
}
